{
  "All Commands Template":{
      "prefix":"#allcmd",
      "body":[
          "/*",
          "C-Documnetation --------- #cdoc                | Data Structure Documentation : #csearchandsort ",
          "C-syntax ---------------- #csyntax             | Selection Sort: #cselectionsort",
          "C-comments -------------- #ccomment            | Bubble Sort: #cbubblesort",
          "C-datatypes ------------- #cdatatypes          | Insertion Sort: #cinsertionsort",
          "C-if -------------------- #cif                 | Merge Sort: #cmergesort",
          "C-if..else -------------- #cifelse             | Linear Search: #clinearsearch",
          "C-if...else ladder ------ #cifelseladder       | Binary Search: #cbinarysearch",
          "C-switch Statement ------ #cswitch",
          "C-for....loop ----------- #cforloop",
          "C While loop ------------ #cwhileloop",
          "----------------------------------------------------------------------------------------",
          "--------------Maths------------------------   -----Write your first program in C--------",
          "Addition of two number:            #csum   |    Type -> #cfirstp ",
          "Substraction oof two number:       #csub   |    Then Follow the steps:",
          "Multiplication of two number:      #cmul   |    -> #step1 #step2 #step3",
          "Divison of two number:             #cdiv   |",
          "-----------------------------------------------------------------------------------------",
          " ",
          "// About Developer: Type \"#aboutdev\" to know about the developer.",
          "*/",
          "$0"
      ]
  },
  "C-Documentation Template":{
      "prefix": "#cdoc",
      "body": [
          "/*",
          "C is a general-purpose, high-level language that was originally developed by Dennis M. Ritchie to develop the UNIX operating system at Bell Labs.",
          "C was originally first implemented on the DEC PDP-11 computer in 1972.",
          "In 1978, Brian Kernighan and Dennis Ritchie produced the first publicly available description of C, now known as the K&R standard.", 
          "The UNIX operating system, the C compiler, and essentially all UNIX application programs have been written in C. ",
          "C has now become a widely used professional language for various reasons",
          "--Easy to learn",
          "--Structured language",
          "--It produces efficient programs",
          "--It can handle low-level activities",
          "--It can be compiled on a variety of computer platforms",
          " ",
          " ",
          "--------------------Applications of C Programming---------------------",
          "--C was initially used for system development work, particularly the programs that make-up the operating system.",
          "C was adopted as a system development language because it produces code that runs nearly as fast as the code written in assembly language.",
          "--Some examples of the use of C are -",
          "--Operating Systems",
          "--Language Compilers",
          "--Assemblers",
          "--Text Editors", 
          "--Print Spoolers", 
          "--Network Drivers",
          "--Modern Programs",
          "--Databases",
          "--Language Interpreters",
          "--Utilities",
          "*/",
          " ",
          "$0"
      ],
      "description": "C-Documentation Command" 
  },
  "C-Syntax Template":{
      "prefix": "#csyntax",
      "body": [
          "/*",
          "A C program basically consists of the following parts −",
          "------Preprocessor Commands",
          "------Functions",
          "------Variables",
          "------Statements & Expressions",
          "------Comments",
          "*/",
          "//Type \"#firstp\" writer program step by step.",
          " ",
          "$0"
      ],
      "description": "Know the Syntax of C"
  },
  "C-Comment Template": {
      "prefix": "#ccomment",
      "body": [
          "/*",
          "Comments",
          "Comments are like helping text in your C program and they are ignored by the compiler.", 
          "They start with /* and terminate with the characters */ as shown below −",            
          "/* my first program in C */  (Multiline Comment)",
          "// my first program in c  (single-line comment)",
          "You cannot have comments within comments and they do not occur within a string or character literals.",
          "*/",
          " ",
          "$0"
      ],       
      "description": "How to write Comments in C"  
  },
  "C-Variables Template": {
      "prefix": "#cvar",
      "body": [
          "/*",
          "Each variable in C has an associated data type.",
          "In 1978, Brian Kernighan and Dennis Ritchie produced the first publicly available description of C, now known as the K&R standard.", 
          "Each data type requires different amounts of memory and has some specific operations which can be performed over it.",
          "Let us briefly describe them one by one:",
          " ",
          "-------------Following are the examples of some very common data types used in C:----------------",
          "--char: The most basic data type in C. It stores a single character and requires a single byte of memory in almost all compilers.",
          "--int: As the name suggests, an int variable is used to store an integer.",
          "--float: It is used to store decimal numbers (numbers with floating point value) with single precision.",
          "--double: It is used to store decimal numbers (numbers with floating point value) with double precision.",
          "Different data types also have different ranges upto which they can store numbers. These ranges may vary from compiler to compiler.",
          "*/",
          " ",
          "$0"
      ],       
      "description": "Define in C"  
  },
  "C-FlowControl Template": {
      "prefix": "#cif",
      "body": [
          "/*",
          "The syntax of the if statement in C programming is:",
          " ",
          "if (test expression)", 
          "{", 
          "           // statements to be executed if the test expression is true",
          "}",
          " ",
          "How if statement works?",
          "The if statement evaluates the test expression inside the parenthesis ().",
          "If the test expression is evaluated to true, statements inside the body of (if) are executed.",
          "If the test expression is evaluated to false, statements inside the body of (if) are not executed.",
          "*/",
          " ",
          "// Program to display a number if it is negative",
          "#include <stdio.h>",
          "int number;",
          "printf(\"Enter an integer: \");",
          "scanf(\"%d\", &number);",
          "// true if number is less than 0",
          "   if (number < 0) {",
          "       printf(\"You entered %d.\", number);",
          "       }",
          "   printf(\"The if statement is easy.\");",
          "return 0;",
          "}",
          " ",
          "//When the user enters -2, the test expression number<0 is evaluated to true. Hence, You entered -2 is displayed on the screen.",
          "//When the user enters 5, the test expression number<0 is evaluated to false and the statement inside the body of if is not executed",
          " ",
          "$0"
      ],
      "description": "Maths Command"
  },
  "C-If...else Template":{
      "prefix": "#cifelse",
      "body": [
          "/*",
          "C if...else Statement",
          "The if statement may have an optional else block. The syntax of the if..else statement is:",
          "if (test expression) {",
          "   // statements to be executed if the test expression is true",
          "}",
          " ",
          "else {",
          "    // statements to be executed if the test expression is false",
          "}",
          " ",
          "------------------How if...else statement works?--------------------",
          "If the test expression is evaluated to true statements inside the body of if are executed.",
          "statements inside the body of else are skipped from execution.",
          "If the test expression is evaluated to false statements inside the body of else are executed",
          "statements inside the body of if are skipped from execution.",
          "*/",
          "// Check whether an integer is odd or even",
          "#include <stdio.h>",
          "int main() {",
              "int number;",
              "printf(\"Enter an integer: \");",
              "scanf(\"%d\", &number);",
              "// True if the remainder is 0",
              "if  (number%2 == 0) {",
                  "printf(\"%d is an even integer.\",number);",
                  "}",
              "else {",
                  "printf(\"%d is an odd integer.\",number);",
                  "}",
              "return 0;",
          "}",
          " ",
          "// When the user enters 7, the test expression number%2==0 is evaluated to false. Hence, the statement inside the body of else is executed.",
          " ",
          "$0"
      ]
  },
  "C-if...else Ladder Template":{
      "prefix":"#cifelseladder",
      "body":[
          "//C if...else Ladder",
          "//The if...else statement executes two different codes depending upon whether the test expression is true or false. Sometimes, a choice has to be made from more than 2 possibilities.",
          "//The if...else ladder allows you to check between multiple test expressions and execute different statements.", 
          " ",
          "/*",
          "if (test expression1) {",
          "// statement(s)",
          "        }",
          "else if(test expression2) {",
          "            // statement(s)",
          "        }",
          "else if (test expression3) {",
          "            // statement(s)",
          "        }",
          ".",
          ".",
          "else {",
          "          // statement(s)",
          "      }",
          "*/",
          " ",
          "// Program to relate two integers using =, > or < symbol",
          "#include <stdio.h>",
          "int main() {",
              "int number1, number2;",
              "printf(\"Enter two integers: \");",
              "scanf(\"%d %d\", &number1, &number2);",
              "//checks if the two integers are equal.",
              "if(number1 == number2) {",
                  "printf(\"Result: %d = %d\",number1,number2);",
                          "}",
                          "//checks if number1 is greater than number2.",
              "else if (number1 > number2) {",
                  "printf(\"Result: %d > %d\", number1, number2);",
                          "}",
                          "//checks if both test expressions are false",
              "else {",
              "    printf(\"Result: %d < %d\",number1, number2);",
              "}",
          "return 0;",
          "}",
          "$0"       
      ]
  },
  "C-Switch Statement Template":{
    "prefix":"#cswitch",
    "body":[
        "/*",
        " C Switch Statement",
        " ",
        "The switch statement in C is an alternate to if-else-if ladder statement which allows us to execute multiple",
        "operations for the different possibles values of a single variable called switch variable",
        "Here, We can define various statements in the multiple cases for the different values of a single variable.",
        "*/",
        " ",
        "#include<stdio.h>",  
        " ",
        "int main(){",    
        "int number=0;",     
        "printf(\"enter a number:\");",    
        "scanf(\"%d\",&number);",    
            "switch(number){",    
            "case 10:",    
            "printf(\"number is equals to 10\");",    
            "break;",    
            "case 50:",    
            "printf(\"number is equal to 50\");",    
            "break;",    
            "case 100:",    
            "printf(\"number is equal to 100\");",    
            "break;",    
            "default:",    
            "printf(\"number is not equal to 10, 50 or 100\");",    
            "}",
        "return 0;",  
        "}",
        " ",
        "$0"      
      ],
      "description":"C Switch Statement"
  },
  "C-For...loop Statement Template":{
    "prefix":"#cforloop",
    "body":[
        "/*",
        "for loop in C",
        "The for loop in C language is used to iterate the statements or a part of the program several times.",
        "It is frequently used to traverse the data structures like the array and linked list.",
        " ",
        "Syntax of for loop in C",
        "The syntax of for loop in c language is given below:",
        " ",
        "for(Expression 1; Expression 2; Expression 3){",  
        "//code to be executed", 
        "}",
        "*/",
        " ",
        "#include<stdio.h>", 
        " ",
        "int main(){",
        "int i=0;",   
        "for(i=1;i<=10;i++){",      
        "printf(\"%d\",i);",      
        "}",     
        "return 0;",  
        "}",
        " ",
        "$0"
      ],
      "description":"C For Loop Statement"
  },
  "C-While Loop Statement Template":{
    "prefix":"#cwhile",
    "body":[
      "/*",
      " ",
        "while loop in C",
        "While loop is also known as a pre-tested loop. In general, a while loop allows a part of the code to",
        "be executed multiple times depending upon a given boolean condition. It can be viewed as a repeating if statement.",
        "The while loop is mostly used in the case where the number of iterations is not known in advance.",
        " ",
        "Syntax of while loop in C language",
        "The syntax of while loop in c language is given below:",
        " ",
        "while(condition){",  
        "//code to be executed",  
        "}",
        "*/",
        " ",
        "#include<stdio.h>",  
          "int main(){",    
          "int i=1;",      
            "while(i<=10){",     
              "printf(\"%d \",i);",      
              "i++;",      
            "}",  
        "return 0;",  
        "}",
        " ",
        "$0"
      ],
      "description":"C While Loop Statement"
  },
  "Sorting and Searching Algorithms Template":{
      "prefix": "#csearchandsort",
      "body": [
          "/*",
          "Sorting Algorithms",
          "A Sorting Algorithm is used to rearrange a given array or list elements according to a comparison operator on the elements.",
          "The comparison operator is used to decide the new order of element in the respective data structure.",
          " ",
          "For example: The below list of characters is sorted in increasing order of their ASCII values.",
          "That is, the character with lesser ASCII value will be placed first than the character with higher ASCII value.",
          " ",
          "Searching Algorithms",
          " ",
          "Searching Algorithms are designed to check for an element or retrieve an element from any data structure where it is stored.",
          "Based on the type of search operation, these algorithms are generally classified into two categories:",
          " ",
          "Sequential Search: In this, the list or array is traversed sequentially and every element is checked. For example: Linear Search.",
          "Interval Search: These algorithms are specifically designed for searching in sorted data-structures.",
          "These type of searching algorithms are much more efficient than Linear Search as they repeatedly target the center of the search structure and divide the search space in half. For Example: Binary Search.",
          "*/",
          " ",
          "//------------Type \"#allcmd\" to get all the command for searching and sorting---------------",
          "$0"
      ],
      "description": "C-Searching and Sorting Documentation Command" 
  },
  "Bubble Sort Algorithm Template":{
      "prefix": "#cbubblesort",
      "body": [
          "// Bubble sort in C",
          "#include <stdio.h>",
          "void bubbleSort(int array[], int size) {",
          " ",
            "// run loops two times: one for walking throught the array",
           "// and the other for comparison",
            "for (int step = 0; step < size - 1; ++step) {",
              "for (int i = 0; i < size - step - 1; ++i) {",
                " ",
                "// To sort in descending order, change \">\" to \"<\".",
                "if (array[i] > array[i + 1]) {",
                  " ",
                  "// swap if greater is at the rear position",
                  "int temp = array[i];",
                  "array[i] = array[i + 1];",
                  "array[i + 1] = temp;",
                "}",
              "}",
            "}",
          "}",
          " ", 
          "// function to print the array",
          "void printArray(int array[], int size) {",
            "for (int i = 0; i < size; ++i) {",
              "printf(\"%d  \", array[i]);",
            "}",
            "printf(\"\");",
          "}",
          " ",
          "// driver code",
          "int main() {",
            "int data[] = {-2, 45, 0, 11, -9};",
            "int size = sizeof(data) / sizeof(data[0]);",
            "bubbleSort(data, size);",
            "printf(\"Sorted Array in Ascending Order:\");",
            "printArray(data, size);",
          "}",
          " ",
          "$0"
      ],
      "description": "Bubble Sort Algorithm Template"
  },
  "Selection Sort Template": {
      "prefix": "#cselectionsort",
      "body": [
          "// Selection sort in C",
          " ",
          "#include <stdio.h>",
          " ",
          "// function to swap the the position of two elements",
          "void swap(int *a, int *b) {",
            "int temp = *a;",
            "*a = *b;",
            "*b = temp;",
          "}",
          " ",
          "void selectionSort(int array[], int size) {",
            "for (int step = 0; step < size - 1; step++) {",
              "int min_idx = step;",
              "for (int i = step + 1; i < size; i++) {",
                  " ",
                "// To sort in descending order, change > to < in this line.",
                "// Select the minimum element in each loop.",
                "if (array[i] < array[min_idx])",
                  "min_idx = i;",
              "}",
              " ",
              "// put min at the correct position",
              "swap(&array[min_idx], &array[step]);",
            "}",
          "}",
          " ",            
          "// function to print an array",
          "void printArray(int array[], int size) {",
            "for (int i = 0; i < size; ++i) {",
              "printf(\"%d  \", array[i]);",
            "}",
            "printf(\"\");",
          "}",
          " ",
          "// driver code",
          "int main() {",
            "int data[] = {20, 12, 10, 15, 2};",
            "int size = sizeof(data) / sizeof(data[0]);",
            "selectionSort(data, size);",
            "printf(\"Sorted array in Acsending Order:\");",
            "printArray(data, size);",
          "}",
          " ",
          "$0"
      ],       
      "description": "Selection Sort Algorithm Template"  
  },
  "Insertion Sort Algorithm Template": {
      "prefix": "#cinsertionsort",
      "body": [
          "// Insertion sort in C",
          " ",
          "#include <stdio.h>",
          " ",
          "// Function to print an array",
          "void printArray(int array[], int size) {",
            "for (int i = 0; i < size; i++) {",
              "printf(\"%d \", array[i]);",
            "}",
            "printf(\" \");",
          "}",
          " ",
          "void insertionSort(int array[], int size) {",
            "for (int step = 1; step < size; step++) {",
              "int key = array[step];",
              "int j = step - 1;",
          " ",
              "// Compare key with each element on the left of it until an element smaller than",
              "// it is found.",
              "// For descending order, change key<array[j] to key>array[j].",
              "while (key < array[j] && j >= 0) {",
                "array[j + 1] = array[j];",
                "--j;",
              "}",
              "array[j + 1] = key;",
            "}",
          "}",
          " ",
          "// Driver code",
          "int main() {",
            "int data[] = {9, 5, 1, 4, 3};",
            "int size = sizeof(data) / sizeof(data[0]);",
            "insertionSort(data, size);",
            "printf(\"Sorted array in ascending order:\");",
            "printArray(data, size);",
          "}",
          " ",
          "$0"
      ],       
      "description": "Insertion Sort Algorithm Template"  
  },
  "Merge Sort Algorithm Template": {
      "prefix": "#cmergesort",
      "body": [
          "// Merge sort in C",
          " ",
          "#include <stdio.h>",
          " ",
          "// Merge two subarrays L and M into arr",
          "void merge(int arr[], int p, int q, int r) {",
          " ",
            "// Create L ← A[p..q] and M ← A[q+1..r]",
            "int n1 = q - p + 1;",
            "int n2 = r - q;",
          " ",
            "int L[n1], M[n2];",
          " ",
            "for (int i = 0; i < n1; i++)",
              "L[i] = arr[p + i];",
            "for (int j = 0; j < n2; j++)",
              "M[j] = arr[q + 1 + j];",
          " ",
            "// Maintain current index of sub-arrays and main array",
            "int i, j, k;",
            "i = 0;",
            "j = 0;",
            "k = p;",
          " ",
            "// Until we reach either end of either L or M, pick larger among",
            "// elements L and M and place them in the correct position at A[p..r]",
            "while (i < n1 && j < n2) {",
              "if (L[i] <= M[j]) {",
                "arr[k] = L[i];",
                "i++;",
              "} else {",
                "arr[k] = M[j];",
                "j++;",
              "}",
              "k++;",
            "}",
          " ",
            "// When we run out of elements in either L or M,",
            "// pick up the remaining elements and put in A[p..r]",
            "while (i < n1) {",
              "arr[k] = L[i];",
              "i++;",
              "k++;",
            "}",
          " ",
            "while (j < n2) {",
              "arr[k] = M[j];",
              "j++;",
              "k++;",
            "}",
          "}",
          " ",
          "// Divide the array into two subarrays, sort them and merge them",
          "void mergeSort(int arr[], int l, int r) {",
            "if (l < r) {",
              " ",
              "// m is the point where the array is divided into two subarrays",
              "int m = l + (r - l) / 2;",
              " ",
              "mergeSort(arr, l, m);",
              "mergeSort(arr, m + 1, r);",
          " ",
              "// Merge the sorted subarrays",
              "merge(arr, l, m, r);",
            "}",
          "}",
          " ",
          "// Print the array",
          "void printArray(int arr[], int size) {",
            "for (int i = 0; i < size; i++)",
              "printf(\"%d \", arr[i]);",
            "printf(\"\");",
          "}",
          " ",
          "// Driver program",
          "int main() {",
            "int arr[] = {6, 5, 12, 10, 9, 1};",
            "int size = sizeof(arr) / sizeof(arr[0]);",
          " ",
            "mergeSort(arr, 0, size - 1);",
          " ",
            "printf(\"Sorted array: \");",
            "printArray(arr, size);",
          "}",
          " ",
          "$0"
      ],
      "description": "Merge Sort Algorithm Template"
  },
  "Linear Search Template":{
      "prefix": "#clinearsearch",
      "body": [
          "// Linear Search in C",
          " ",
          "#include <stdio.h>",
          " ",
          "int search(int array[], int n, int x) {",
          " ",
            "// Going through array sequencially",
            "for (int i = 0; i < n; i++)",
              "if (array[i] == x)",
                "return i;",
            "return -1;",
          "}",
          " ",
          "int main() {",
            "int array[] = {2, 4, 0, 1, 9};",
            "int x = 1;",
            "int n = sizeof(array) / sizeof(array[0]);",
          " ",
            "int result = search(array, n, x);",
          " ",
            "(result == -1) ? printf(\"Element not found\") : printf(\"Element found at index: %d\", result);",
          "}",
          " ",
          "$0"
      ],
      "description": "Linear Search Algorihtm Template"
  },
  "Binary Search Template":{
      "prefix":"#cbinarysearch",
      "body":[
          "// Binary Search in C",
          " ",
          "#include <stdio.h>",
          " ",
          "int binarySearch(int array[], int x, int low, int high) {",
            "// Repeat until the pointers low and high meet each other",
            "while (low <= high) {",
              "int mid = low + (high - low) / 2;",
          " ",
              "if (array[mid] == x)",
                "return mid;",
          " ",
              "if (array[mid] < x)",
                "low = mid + 1;",
          " ",
              "else",
                "high = mid - 1;",
            "}",
          " ",
            "return -1;",
          "}",
          " ",
          "int main(void) {",
            "int array[] = {3, 4, 5, 6, 7, 8, 9};",
            "int n = sizeof(array) / sizeof(array[0]);",
            "int x = 4;",
            "int result = binarySearch(array, x, 0, n - 1);",
            "if (result == -1)",
              "printf(\"Not found\");",
            "else",
              "printf(\"Element is found at index %d\", result);",
            "return 0;",
          "}",
          " ",
          "$0"       
      ],
      "description": "Binary Search Algorihtm Template"
  },
  "Maths Command Template":{
      "prefix": "#mathcmd",
      "body": [
          "/*",
          "------------------Maths Command (Type $(command) to get the code template--------------",
          "Summation: \"#csum\"",
          "Substraction: \"#csub\"",
          "Multiplication: \"#cmul\"",
          "Division: \"#cdiv\"",
          "Type #cfirstp to write a simple c program step by step",
          " ",
          "*/",
          " ",
          "$0"
      ],
      "description": "Maths Command" 
  },
  "Sum Template":{
      "prefix": "#csum",
      "body": [
          "#include <stdio.h>",
          "int main(){",
          "   ",
          "   int a,b,sum;",
          "   scanf(\"%d %d\", &a,&b);",
          "   sum = a + b;",
          "   printf(\"Summation of two number: %d\", sum);",
          "   ",
          "return 0;",
          "}",
          "   ",
          "$0"
      ],
      "description": "Summation of two number."
  },
  "Sub Template":{
      "prefix": "#csub",
      "body": [
          "#include <stdio.h>",
          "int main(){",
          "   ",
          "   int a,b,sum;",
          "   scanf(\"%d %d\", &a,&b);",
          "   sub = a - b;",
          "   printf(\"Substraction of two nmber: %d\", sub);",
          "   ",
          "return 0;",
          "}",
          "   ",
          "$0"
      ],
      "description": "Substraction of two number"
  },
  "Mul Template":{
      "prefix": "#cmul",
      "body": [
          "#include <stdio.h>",
          "int main(){",
          "   ",
          "   int a,b,mul;",
          "   scanf(\"%d %d\", &a,&b);",
          "   mul = a * b;",
          "   printf(\"Multiplication of two number: %d\", sum);",
          "   ",
          "return 0;",
          "}",
          "   ",
          "$0"
      ],
      "description": "Multiplication of two number"
  },
  "Div Template":{
      "prefix": "#cdiv",
      "body": [
          "#include <stdio.h>",
          "int main(){",
          "   ",
          "   int a,b,div;",
          "   scanf(\"%d %d\", &a,&b);",
          "   div = a/b;",
          "   printf(\"Division of two number: %d\", div);",
          "   ",
          "return 0;",
          "}",
          "   ",
          "$0"
      ],
      "description": "Division of two number"
  },
  "First Program Template":{
      "prefix": "#cfirstp",
      "body": [
          "// About Developer: Type \"#abotdev\" to know about the developer.",
          "/*",
          "A C program basically consists of the following parts −",
          "------Preprocessor Commands",
          "------Functions",
          "------Variables",
          "------Statements & Expressions",
          "------Comments",
          "*/",
          "//Type \"#step1\" writer program step by step.",
          " ",
          "$0"
      ],
      "description": "Write a program step by step!" 
  },
  "Step1 Template":{
      "prefix": "#step1",
      "body": [
          "/* my first program in C */",
          "// Step 1  //The first line of the program #include <stdio.h> is a preprocessor command.", 
          "//which tells a C compiler to include stdio.h file before going to actual compilation.",
          " ",
          "#include <stdio.h>         //Includeing the Library. Type\"#step2\" for next step.",
          " ",
          "$0"
      ],
      "description": "Step 1"
  },
  "Step2 Template":{
      "prefix": "#step2",
      "body": [
          "// Step 2",
          "//The next line int main() is the main function where the program execution begins.",
          "int main()         //Initializing main function. Type\"#step2\" for next step.",
          " ",
          "$0"
      ],
      "description": "Step 2"
  },
  "Step3 Template":{
      "prefix": "#step3",
      "body": [
          "// Step 3",
          "{",       
          "   //Write your code and excute.",
          "   /*", "  The next line printf(...) is another function available in C which causes the message ",
          "   \"Hello World!\" to be displayed on the screen.","  */",
          "   printf(\"Hello World!\");  ",               
          "   $0",
          "   ",
          "   return 0;            //It terminates the main() function and returns the value 0",    
          "}",
          " ",
          "/*",
          "Make sure the gcc compiler is in your path and that you are running it in the",
          "directory containing the source file hello.c", "*/",
          " "
      ],
      "description": "Step 3"
  },
  "About Developer Template":{
      "prefix": "#aboutdev",
      "body": [
          "/*",
          "Name: Yash Chauhan",
          "Age:19 Email: er.yashjayeshchauhan@gmail.com",
          "Nationality: Indian",
          "Description: Yash Jayesh Chauhan is a second year student pursing Computer Science in Parul Institute of",
          "Engineering and Technology, Parul University. He is very fascinated with technology and he also represented",
          "his university for more than 27 times at National/ International hackathons, summits and conferences. His", 
          "research Interset is in Machine Learning, Deep Learning, Artificial Intelligence, Virtual reality, Computer Vision,",
          "Augmented Reality, Gestural Interaction, Automation, Natural Language Processing. “I’ll never stop striving for",
          "what I’ve always wanted. Though at some instances it became difficult to outperform students from IITs,",
          "I didn’t give up and I never will” said by Yash. ",
          "------------------Social Media-------------------",
          " ",
          "Linkedin: https://in.linkedin.com/in/iyashjayesh",
          "Instagram: https://www.instagram.com/iyashjayesh/",
          "Facebook: https://www.facebook.com/iyashjayesh",
          "Twitter: https://twitter.com/iyashjayesh",
          "Medium: https://medium.com/@iyashjayesh",
          "*/",
          " ",
          "$0"
      ],
      "description": "Know about the developer and connect for collaboration."
  }
}
